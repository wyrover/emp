{"version":3,"sources":["home.js"],"names":[],"mappingsfile":"home.js","sourcesContent":["'use strict';\n\nVue.http.headers.common[\"X-CSRF-TOKEN\"] = document.querySelector(\"#token\").getAttribute(\"value\");\nvar chart ;\n\n\n\nvar api = 'http://'+window.location.host + '/api/v1/home';\n\nvar vm = new Vue({\n\n    el:\"#app\",\n\n    data:function(){\n        return {\n            chartData:{},\n            employeeCount:'',\n            ourEmployees:'',\n            officeCount:'',\n            companyCount:'',\n            latestPassport:[],\n            latestVisa:[],\n            currentChart:'position',\n            positionData:[],\n            companyData:[],\n            officeData:[]\n\n        }\n    },\n\n    ready:function(){\n        this.getData();\n    },\n\n    methods:{\n\n        getData:function(){\n            this.$http.get(api)\n            .success(function(data){\n                    removeLoading();\n                this.employeeCount = data[\"employeeCount\"],\n                this.ourEmployees = data[\"ourEmployees\"],\n                this.officeCount = data[\"officeCount\"],\n                this.companyCount = data[\"companyCount\"],\n                this.latestPassport = data[\"latestPassport\"],\n                this.latestVisa = data[\"latestVisa\"],\n                this.positionData = data[\"position\"],\n                this.companyData = data[\"company\"],\n                this.officeData = data[\"office\"]\n                // this.getItems(this.position,\"name\")\n                this.setChartData(data[this.currentChart])\n            })\n        },\n\n        changeChart:function(str){\n            var prop = str+\"Data\";\n            this.setChartData(this[prop]);\n        },\n\n\n        setChartData:function(items){\n\n            var labels = this.getItems(items,\"name\");\n            var counts = this.getItems(items,\"counts\");\n\n            this.chartData = {\n                labels: labels,\n                series: counts\n            };\n\n            this.drawChart();\n        },\n\n        resetCanvas:function(){\n            $('#myChart').remove(); // this is my <canvas> element\n            $('#chartBox').append('<canvas id=\"myChart\"><canvas>');\n        },\n\n        drawChart:function(){\n\n            this.resetCanvas();\n            var ctx = $(\"#myChart\").get(0).getContext(\"2d\");\n\n            var data = {\n                labels: this.chartData.labels,\n                datasets: [\n                    {\n                        fillColor: \"rgba(151,187,205,0.5)\",\n                        strokeColor: \"rgba(151,187,205,0.8)\",\n                        highlightFill: \"rgba(151,187,205,0.75)\",\n                        highlightStroke: \"rgba(151,187,205,1)\",\n                        data: this.chartData.series\n                    }\n                ]\n            };\n            var myBarChart = new Chart(ctx).Bar(data);\n\n        },\n\n        //该方法遍历给定对象，生成指定键名的所有记录\n        getItems:function(items,field){\n            var collection = items;\n            var labelArr = [];\n\n            for (var i = 0; i < collection.length; i++) {\n                labelArr.push(collection[i][field]); \n            };       \n\n            return labelArr;        \n\n        }\n\n    }\n\n});\n\n\n\n//# sourceMappingURL=home.js.map"],"sourceRoot":"/source/"}