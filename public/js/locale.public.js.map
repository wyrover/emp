{"version":3,"sources":["locale.public.js"],"names":[],"mappingsfile":"locale.public.js","sourcesContent":["\"use strict\";\nVue.http.headers.common[\"X-CSRF-TOKEN\"] = document.querySelector(\"#token\").getAttribute(\"value\");\nvar baseURL =  'http://'+window.location.host ;\nvar vm = new Vue({\n    el: \"#app\",\n    data: {\n        keyword: \"\",\n        sortKey:\"\",\n        reverse:false,\n        records_show:10,\n        pagersCount:5,//显示的pager数量\n        perpage:15,\n        disabled:true,\n        current_office:'1',\n        currentChart:'positions',\n        columns:[\n            {\n                'header':'姓名',\n                'class':''\n            },\n            {\n                'header':'岗位',\n                'class':''\n            },\n            {\n                'header':'单位',\n                'class':''\n            }\n\n        ],\n        ids:[\n            \"pinyin\",\"position_id\",\"company_id\"\n        ]\n    },\n\n    ready:function(){\n        this.getData();\n        //this.makePagers();\n    },\n\n    methods:{\n\n        buttonState:function(){\n\n            if($(\"#datatable>tbody input:checkbox:checked\").length>0)\n            {\n                this.disabled = false;\n            }else\n                this.disabled = true;\n        },\n        //从API获取相应数据\n        getData: function(page){\n            addLoading();\n            this.$http.get(baseURL+\"/api/v1/locale?locale=\" + this.current_office + \"&page=\" + page +\"&perpage=\"+this.perpage,function(data){\n                this.$set(\"user_level\",data[\"user_level\"]);\n                this.$set(\"offices\",data[\"offices\"]);\n                this.$set(\"positions\",data[\"positions\"]);\n                this.$set(\"companies\",data[\"companies\"]);\n                this.$set(\"data\",data[\"data\"]);\n                this.$set(\"total\",data[\"total\"]);\n                this.$set(\"from\",data[\"from\"]);\n                this.$set(\"to\",data[\"to\"]);\n                this.$set(\"perPage\",data[\"per_page\"]);\n                this.$set(\"currentPage\",data[\"current_page\"]);\n                this.$set(\"lastPage\",data[\"last_page\"]);\n            }).success(function(data){\n                removeLoading();\n                this.setChartData(data[this.currentChart]);\n            }).error(function (status) {\n                $(\"#show-error\").show();\n            });\n        },\n\n        changeChart:function(str){\n            var prop = str;\n            this.setChartData(this[prop]);\n        },\n\n        setChartData:function(items){\n            var data = [];\n            for (var k in items) {\n                //results[name] = items[k];\n                data.push({\n                    value : items[k],\n                    label : k,\n                    color: randomColor({hue:'green',luminosity: 'dark'}),\n                    highlight: \"#5AD3D1\",\n                })\n            }\n            this.chartData = data;\n            this.drawChart();\n        },\n\n        resetCanvas:function(){\n            $('#myChart').remove(); // this is my <canvas> element\n            $('#chartBox').append('<canvas id=\"myChart\"><canvas>');\n        },\n\n\n        drawChart:function(){\n            this.resetCanvas();\n            var ctx = $(\"#myChart\").get(0).getContext(\"2d\");\n            var options = {\n                //Boolean - Whether we should show a stroke on each segment\n                segmentShowStroke : true,\n\n                //String - The colour of each segment stroke\n                segmentStrokeColor : \"#fff\",\n\n                //Number - The width of each segment stroke\n                segmentStrokeWidth : 2,\n\n                //Number - The percentage of the chart that we cut out of the middle\n                percentageInnerCutout : 50, // This is 0 for Pie charts\n\n                //Number - Amount of animation steps\n                responsive: true,\n                //String - Animation easing effect\n                animationEasing : \"easeOutElastic\",\n\n                //Boolean - Whether we animate the rotation of the Doughnut\n                animateRotate : true,\n\n                //Boolean - Whether we animate scaling the Doughnut from the centre\n                animateScale : false,\n\n                //String - A legend template\n                legendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>\"\n\n            }\n           var chart = new Chart(ctx).Doughnut(this.chartData,options);\n            var data = this.chartData;\n            legend(document.getElementById('legend'),data,chart, \"<%=label%>: <%=value%>人\");\n\n        },\n\n        changeLocale:function(e){\n            this.current_office = e.target.id;\n            this.getData();\n        },\n\n        changePerPage:function(param){\n            this.perpage =  param;\n            this.getData();\n        },\n\n        sortBy:function(e){\n            var onKey = $(e.target).closest(\"th\").attr('id');\n            this.sortKey = onKey;\n            this.reverse = (this.sortKey==onKey) ? !this.reverse : false; //如果初始的sortKey==onKey,反转,否则返回false不响应\n        },\n\n        goSearch:function(){\n            this.perpage = 'all';\n            this.getData('all');\n        },\n        clearInput:function(){\n            this.$$.input.value = '';\n        }\n    },\n\n\n    computed:{\n        pagers:{\n            get:function(){\n                var pagers = [];\n                var current = this.$data[\"currentPage\"]; //从API中获取当前页码\n                var max = this.$data[\"lastPage\"];\n                var limited = current + this.pagersCount;\n                var sidebar = Math.round((parseInt(this.pagersCount) -1) /2);  //为把当前页面放到页码指示器的中间，获取两侧数量\n                if(current - sidebar <1){\n                    if( current + sidebar >= max){\n                        for(var i = 1; i <= max ; i++){\n                            pagers.push(i);\n                        };\n                    }\n                    else{\n                        for(var i = 1; i < limited ; i++){\n                            pagers.push(i);\n                        };\n                    }\n                }\n\n\n                else if ( current + sidebar > max ){\n                    if(max - this.pagersCount > 0){\n                        for(var i = max - this.pagersCount; i < max+1; i++){\n                            pagers.push(i);\n                        }\n                    }\n                    else{\n                        for(var i = 1; i <= current; i++){\n                            pagers.push(i);\n                        }\n                    }\n                }\n\n                else{\n                    for(var i = current; i < limited ; i++){\n                        var j = i- sidebar;\n                        pagers.push(j);\n                        j++;\n                    };\n                }\n\n\n                return pagers;\n            }\n        }\n    }\n\n\n});\n\n//# sourceMappingURL=locale.public.js.map"],"sourceRoot":"/source/"}